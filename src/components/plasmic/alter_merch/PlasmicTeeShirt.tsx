// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: xtfWGDm5314EDVZ9cvmE1G
// Component: TblQyRgFM3
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: 5W9CbZmWGV-/component
import TextInput2 from "../../TextInput2"; // plasmic-import: wf0EastN9f_/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_alter_merch.module.css"; // plasmic-import: xtfWGDm5314EDVZ9cvmE1G/projectcss
import sty from "./PlasmicTeeShirt.module.css"; // plasmic-import: TblQyRgFM3/css

import Polygon1Icon from "./icons/PlasmicIcon__Polygon1"; // plasmic-import: 28_PJ3siAz/icon
import Line9Icon from "./icons/PlasmicIcon__Line9"; // plasmic-import: ns7mWEGL0fY/icon
import Line6Icon from "./icons/PlasmicIcon__Line6"; // plasmic-import: 0M7vxWGIKEf/icon
import Rectangle780Icon from "./icons/PlasmicIcon__Rectangle780"; // plasmic-import: yetMwU95Qi/icon
import Line8Icon from "./icons/PlasmicIcon__Line8"; // plasmic-import: utGzbJ1Uak/icon
import Ellipse1Icon from "./icons/PlasmicIcon__Ellipse1"; // plasmic-import: JpcakA-P24/icon
import Vector5Icon from "./icons/PlasmicIcon__Vector5"; // plasmic-import: Q63xMMF-U/icon
import IconShare2Icon from "./icons/PlasmicIcon__IconShare2"; // plasmic-import: 2g3Dmhq5iZ/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: RmzuV1m7hJM/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: on5inL9tgye/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: tz5FLb8Srop/icon
import image2I7GLlVst from "./images/image2.png"; // plasmic-import: I7g-LLVst/picture

export type PlasmicTeeShirt__VariantMembers = {};
export type PlasmicTeeShirt__VariantsArgs = {};
type VariantPropType = keyof PlasmicTeeShirt__VariantsArgs;
export const PlasmicTeeShirt__VariantProps = new Array<VariantPropType>();

export type PlasmicTeeShirt__ArgsType = {};
type ArgPropType = keyof PlasmicTeeShirt__ArgsType;
export const PlasmicTeeShirt__ArgProps = new Array<ArgPropType>();

export type PlasmicTeeShirt__OverridesType = {
  root?: p.Flex<"div">;
  tShirtsType?: p.Flex<"div">;
  filterBy?: p.Flex<"div">;
  small?: p.Flex<"div">;
  medium?: p.Flex<"div">;
  large?: p.Flex<"div">;
  large2?: p.Flex<"div">;
  black?: p.Flex<"div">;
  purple?: p.Flex<"div">;
  binance?: p.Flex<"div">;
  polygon?: p.Flex<"div">;
  _0?: p.Flex<"div">;
  _150?: p.Flex<"div">;
  price?: p.Flex<"div">;
  brand?: p.Flex<"div">;
  color?: p.Flex<"div">;
  size?: p.Flex<"div">;
  rectangle766?: p.Flex<"div">;
  rectangle769?: p.Flex<"div">;
  rectangle771?: p.Flex<"div">;
  rectangle772?: p.Flex<"div">;
  a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001?: p.Flex<"div">;
  rectangle768?: p.Flex<"div">;
  _10SmallAave?: p.Flex<"div">;
  _7XSmallTheGraph?: p.Flex<"div">;
  _10SmallPolygon?: p.Flex<"div">;
  _10MediumEthereum?: p.Flex<"div">;
  _5XLarge1Inch?: p.Flex<"div">;
  _5LargeBinance?: p.Flex<"div">;
  twitter17?: p.Flex<"div">;
  telegramLogo2?: p.Flex<"div">;
  twitter18?: p.Flex<"div">;
  textInput2?: p.Flex<typeof TextInput2>;
  img?: p.Flex<typeof p.PlasmicImg>;
};

export interface DefaultTeeShirtProps {
  className?: string;
}

function PlasmicTeeShirt__RenderFunc(props: {
  variants: PlasmicTeeShirt__VariantsArgs;
  args: PlasmicTeeShirt__ArgsType;
  overrides: PlasmicTeeShirt__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants,
  };

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"tShirtsType"}
            data-plasmic-override={overrides.tShirtsType}
            className={classNames(projectcss.all, sty.tShirtsType)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bs2Un
              )}
            >
              {"Home > Type > T-SHIRTS"}
            </div>

            <div
              data-plasmic-name={"filterBy"}
              data-plasmic-override={overrides.filterBy}
              className={classNames(projectcss.all, sty.filterBy)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tjN55
                )}
              >
                {"Filter by:"}
              </div>
            </div>

            <div
              data-plasmic-name={"small"}
              data-plasmic-override={overrides.small}
              className={classNames(projectcss.all, sty.small)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vxO2U
                )}
              >
                {"Small"}
              </div>
            </div>

            <div
              data-plasmic-name={"medium"}
              data-plasmic-override={overrides.medium}
              className={classNames(projectcss.all, sty.medium)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ljbyX
                )}
              >
                {"Medium"}
              </div>
            </div>

            <div
              data-plasmic-name={"large"}
              data-plasmic-override={overrides.large}
              className={classNames(projectcss.all, sty.large)}
            >
              <div
                data-plasmic-name={"large2"}
                data-plasmic-override={overrides.large2}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.large2
                )}
              >
                {"Large\n"}
              </div>
            </div>

            <div
              data-plasmic-name={"black"}
              data-plasmic-override={overrides.black}
              className={classNames(projectcss.all, sty.black)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oEoDn
                )}
              >
                {"Black"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__h4EiP
              )}
            >
              {"White"}
            </div>

            <div
              data-plasmic-name={"purple"}
              data-plasmic-override={overrides.purple}
              className={classNames(projectcss.all, sty.purple)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wglHd
                )}
              >
                {"Purple"}
              </div>
            </div>

            <div
              data-plasmic-name={"binance"}
              data-plasmic-override={overrides.binance}
              className={classNames(projectcss.all, sty.binance)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vnzN7
                )}
              >
                {"Binance"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__s3Roz
              )}
            >
              {"AAVE"}
            </div>

            <div
              data-plasmic-name={"polygon"}
              data-plasmic-override={overrides.polygon}
              className={classNames(projectcss.all, sty.polygon)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ulRwX
                )}
              >
                {"Polygon"}
              </div>
            </div>

            <div
              data-plasmic-name={"_0"}
              data-plasmic-override={overrides._0}
              className={classNames(projectcss.all, sty._0)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wwaAg
                )}
              >
                {"0â‚¬"}
              </div>
            </div>

            <div
              data-plasmic-name={"_150"}
              data-plasmic-override={overrides._150}
              className={classNames(projectcss.all, sty._150)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gduEn
                )}
              >
                {"150â‚¬"}
              </div>
            </div>

            <div
              data-plasmic-name={"price"}
              data-plasmic-override={overrides.price}
              className={classNames(projectcss.all, sty.price)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pqsFh
                )}
              >
                {"PRICE"}
              </div>
            </div>

            <div
              data-plasmic-name={"brand"}
              data-plasmic-override={overrides.brand}
              className={classNames(projectcss.all, sty.brand)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oKbLz
                )}
              >
                {"BRAND"}
              </div>
            </div>

            <div
              data-plasmic-name={"color"}
              data-plasmic-override={overrides.color}
              className={classNames(projectcss.all, sty.color)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lf9N6
                )}
              >
                {"COLOR"}
              </div>
            </div>

            <div
              data-plasmic-name={"size"}
              data-plasmic-override={overrides.size}
              className={classNames(projectcss.all, sty.size)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mBvi
                )}
              >
                {"SIZE"}
              </div>
            </div>

            <Polygon1Icon
              className={classNames(projectcss.all, sty.svg__oMumr)}
              role={"img"}
            />

            <Polygon1Icon
              className={classNames(projectcss.all, sty.svg___8Hict)}
              role={"img"}
            />

            <Polygon1Icon
              className={classNames(projectcss.all, sty.svg___7QY)}
              role={"img"}
            />

            <div
              data-plasmic-name={"rectangle766"}
              data-plasmic-override={overrides.rectangle766}
              className={classNames(projectcss.all, sty.rectangle766)}
            />

            <div
              data-plasmic-name={"rectangle769"}
              data-plasmic-override={overrides.rectangle769}
              className={classNames(projectcss.all, sty.rectangle769)}
            />

            <div
              data-plasmic-name={"rectangle771"}
              data-plasmic-override={overrides.rectangle771}
              className={classNames(projectcss.all, sty.rectangle771)}
            />

            <div
              data-plasmic-name={"rectangle772"}
              data-plasmic-override={overrides.rectangle772}
              className={classNames(projectcss.all, sty.rectangle772)}
            />

            <div
              data-plasmic-name={
                "a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001"
              }
              data-plasmic-override={
                overrides.a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001
              }
              className={classNames(
                projectcss.all,
                sty.a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001
              )}
            />

            <div
              data-plasmic-name={"rectangle768"}
              data-plasmic-override={overrides.rectangle768}
              className={classNames(projectcss.all, sty.rectangle768)}
            />

            <div
              data-plasmic-name={"_10SmallAave"}
              data-plasmic-override={overrides._10SmallAave}
              className={classNames(projectcss.all, sty._10SmallAave)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__a1Ol1
                )}
              >
                {"10â‚¬\nSmall\nAAVE"}
              </div>
            </div>

            <div
              data-plasmic-name={"_7XSmallTheGraph"}
              data-plasmic-override={overrides._7XSmallTheGraph}
              className={classNames(projectcss.all, sty._7XSmallTheGraph)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__j6O0G
                )}
              >
                {"7â‚¬\nXSmall\nThe Graph"}
              </div>
            </div>

            <div
              data-plasmic-name={"_10SmallPolygon"}
              data-plasmic-override={overrides._10SmallPolygon}
              className={classNames(projectcss.all, sty._10SmallPolygon)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__baktX
                )}
              >
                {"10â‚¬\nSmall\nPolygon"}
              </div>
            </div>

            <div
              data-plasmic-name={"_10MediumEthereum"}
              data-plasmic-override={overrides._10MediumEthereum}
              className={classNames(projectcss.all, sty._10MediumEthereum)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ztqZv
                )}
              >
                {"10â‚¬\nMedium\nEthereum"}
              </div>
            </div>

            <div
              data-plasmic-name={"_5XLarge1Inch"}
              data-plasmic-override={overrides._5XLarge1Inch}
              className={classNames(projectcss.all, sty._5XLarge1Inch)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5X2Gf
                )}
              >
                {"5â‚¬\nXLarge\n1inch"}
              </div>
            </div>

            <div
              data-plasmic-name={"_5LargeBinance"}
              data-plasmic-override={overrides._5LargeBinance}
              className={classNames(projectcss.all, sty._5LargeBinance)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pZsIv
                )}
              >
                {"5â‚¬\nLarge\nBinance"}
              </div>
            </div>

            <Line9Icon
              className={classNames(projectcss.all, sty.svg__wgStc)}
              role={"img"}
            />

            <Line6Icon
              className={classNames(projectcss.all, sty.svg__cphj1)}
              role={"img"}
            />

            <Line9Icon
              className={classNames(projectcss.all, sty.svg__sdFz)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg___3Ju)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__o6F4U)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__qqK6A)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg___55AWa)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__t0Ka6)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__qgDBe)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__kujpa)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__kEb4G)}
              role={"img"}
            />

            <Rectangle780Icon
              className={classNames(projectcss.all, sty.svg__nufGp)}
              role={"img"}
            />

            <Line8Icon
              className={classNames(projectcss.all, sty.svg___3MFr)}
              role={"img"}
            />

            <Ellipse1Icon
              className={classNames(projectcss.all, sty.svg__egKgk)}
              role={"img"}
            />

            <Ellipse1Icon
              className={classNames(projectcss.all, sty.svg__g2Xtx)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kuZZ
              )}
            >
              {"Help & Contact"}
            </div>

            <div
              data-plasmic-name={"twitter17"}
              data-plasmic-override={overrides.twitter17}
              className={classNames(projectcss.all, sty.twitter17)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0H0XH
              )}
            >
              {"Follow us"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fc59S
              )}
            >
              {
                "Frequent Questions\nApplication Altermerch\nDelivery \nFollow my delivery"
              }
            </div>

            <Vector5Icon
              className={classNames(projectcss.all, sty.svg__aQnOp)}
              role={"img"}
            />

            <IconShare2Icon
              className={classNames(projectcss.all, sty.svg__jqXiz)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__whhcu
              )}
            >
              {"Help & Contact"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___9K8KD
              )}
            >
              {"Follow us"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qmJvp
              )}
            >
              {
                "Frequent Questions\nApplication Altermerch\nDelivery \nFollow my delivery"
              }
            </div>

            <Vector5Icon
              className={classNames(projectcss.all, sty.svg__wmTf8)}
              role={"img"}
            />

            <IconShare2Icon
              className={classNames(projectcss.all, sty.svg__iccJr)}
              role={"img"}
            />

            <div
              data-plasmic-name={"telegramLogo2"}
              data-plasmic-override={overrides.telegramLogo2}
              className={classNames(projectcss.all, sty.telegramLogo2)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wCksl
              )}
            >
              {"Help & Contact"}
            </div>

            <div
              data-plasmic-name={"twitter18"}
              data-plasmic-override={overrides.twitter18}
              className={classNames(projectcss.all, sty.twitter18)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kgij3
              )}
            >
              {"Follow us"}
            </div>

            <Vector5Icon
              className={classNames(projectcss.all, sty.svg__gPM)}
              role={"img"}
            />

            <IconShare2Icon
              className={classNames(projectcss.all, sty.svg__ddpnQ)}
              role={"img"}
            />

            <Button
              className={classNames("__wab_instance", sty.button___7UjEu)}
            >
              {"Connect your Wallet"}
            </Button>

<<<<<<< HEAD
            <p.PlasmicImg
              data-plasmic-name={"logo"}
              data-plasmic-override={overrides.logo}
              alt={""}
              className={classNames(sty.logo)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"349px" as const}
              loading={"lazy" as const}
              src={{
                src: image4MItPsrAf,
                fullWidth: 1528,
                fullHeight: 1072,
                aspectRatio: undefined,
              }}
            />

=======
>>>>>>> 4e156aacc76e79ba02185e6bbe66824d82f7e447
            <TextInput2
              data-plasmic-name={"textInput2"}
              data-plasmic-override={overrides.textInput2}
              className={classNames("__wab_instance", sty.textInput2)}
            />

            <Button className={classNames("__wab_instance", sty.button__ockN)}>
              {"Messenger"}
            </Button>

            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"208px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"230px" as const}
              loading={"lazy" as const}
              src={{
                src: image2I7GLlVst,
                fullWidth: 500,
                fullHeight: 500,
                aspectRatio: undefined
              }}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "tShirtsType",
    "filterBy",
    "small",
    "medium",
    "large",
    "large2",
    "black",
    "purple",
    "binance",
    "polygon",
    "_0",
    "_150",
    "price",
    "brand",
    "color",
    "size",
    "rectangle766",
    "rectangle769",
    "rectangle771",
    "rectangle772",
    "a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001",
    "rectangle768",
    "_10SmallAave",
    "_7XSmallTheGraph",
    "_10SmallPolygon",
    "_10MediumEthereum",
    "_5XLarge1Inch",
    "_5LargeBinance",
    "twitter17",
    "telegramLogo2",
    "twitter18",
<<<<<<< HEAD
    "logo",
    "textInput2",
=======
    "textInput2",
    "img"
>>>>>>> 4e156aacc76e79ba02185e6bbe66824d82f7e447
  ],
  tShirtsType: [
    "tShirtsType",
    "filterBy",
    "small",
    "medium",
    "large",
    "large2",
    "black",
    "purple",
    "binance",
    "polygon",
    "_0",
    "_150",
    "price",
    "brand",
    "color",
    "size",
    "rectangle766",
    "rectangle769",
    "rectangle771",
    "rectangle772",
    "a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001",
    "rectangle768",
    "_10SmallAave",
    "_7XSmallTheGraph",
    "_10SmallPolygon",
    "_10MediumEthereum",
    "_5XLarge1Inch",
    "_5LargeBinance",
    "twitter17",
    "telegramLogo2",
    "twitter18",
<<<<<<< HEAD
    "logo",
    "textInput2",
=======
    "textInput2",
    "img"
>>>>>>> 4e156aacc76e79ba02185e6bbe66824d82f7e447
  ],
  filterBy: ["filterBy"],
  small: ["small"],
  medium: ["medium"],
  large: ["large", "large2"],
  large2: ["large2"],
  black: ["black"],
  purple: ["purple"],
  binance: ["binance"],
  polygon: ["polygon"],
  _0: ["_0"],
  _150: ["_150"],
  price: ["price"],
  brand: ["brand"],
  color: ["color"],
  size: ["size"],
  rectangle766: ["rectangle766"],
  rectangle769: ["rectangle769"],
  rectangle771: ["rectangle771"],
  rectangle772: ["rectangle772"],
  a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001: [
    "a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001",
  ],
  rectangle768: ["rectangle768"],
  _10SmallAave: ["_10SmallAave"],
  _7XSmallTheGraph: ["_7XSmallTheGraph"],
  _10SmallPolygon: ["_10SmallPolygon"],
  _10MediumEthereum: ["_10MediumEthereum"],
  _5XLarge1Inch: ["_5XLarge1Inch"],
  _5LargeBinance: ["_5LargeBinance"],
  twitter17: ["twitter17"],
  telegramLogo2: ["telegramLogo2"],
  twitter18: ["twitter18"],
<<<<<<< HEAD
  logo: ["logo"],
  textInput2: ["textInput2"],
=======
  textInput2: ["textInput2"],
  img: ["img"]
>>>>>>> 4e156aacc76e79ba02185e6bbe66824d82f7e447
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  tShirtsType: "div";
  filterBy: "div";
  small: "div";
  medium: "div";
  large: "div";
  large2: "div";
  black: "div";
  purple: "div";
  binance: "div";
  polygon: "div";
  _0: "div";
  _150: "div";
  price: "div";
  brand: "div";
  color: "div";
  size: "div";
  rectangle766: "div";
  rectangle769: "div";
  rectangle771: "div";
  rectangle772: "div";
  a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001: "div";
  rectangle768: "div";
  _10SmallAave: "div";
  _7XSmallTheGraph: "div";
  _10SmallPolygon: "div";
  _10MediumEthereum: "div";
  _5XLarge1Inch: "div";
  _5LargeBinance: "div";
  twitter17: "div";
  telegramLogo2: "div";
  twitter18: "div";
  textInput2: typeof TextInput2;
  img: typeof p.PlasmicImg;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTeeShirt__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTeeShirt__VariantsArgs;
    args?: PlasmicTeeShirt__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTeeShirt__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicTeeShirt__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicTeeShirt__ArgProps,
          internalVariantPropNames: PlasmicTeeShirt__VariantProps,
        }),
      [props, nodeName]
    );

    return PlasmicTeeShirt__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTeeShirt";
  } else {
    func.displayName = `PlasmicTeeShirt.${nodeName}`;
  }
  return func;
}

export const PlasmicTeeShirt = Object.assign(
  // Top-level PlasmicTeeShirt renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    tShirtsType: makeNodeComponent("tShirtsType"),
    filterBy: makeNodeComponent("filterBy"),
    small: makeNodeComponent("small"),
    medium: makeNodeComponent("medium"),
    large: makeNodeComponent("large"),
    large2: makeNodeComponent("large2"),
    black: makeNodeComponent("black"),
    purple: makeNodeComponent("purple"),
    binance: makeNodeComponent("binance"),
    polygon: makeNodeComponent("polygon"),
    _0: makeNodeComponent("_0"),
    _150: makeNodeComponent("_150"),
    price: makeNodeComponent("price"),
    brand: makeNodeComponent("brand"),
    color: makeNodeComponent("color"),
    size: makeNodeComponent("size"),
    rectangle766: makeNodeComponent("rectangle766"),
    rectangle769: makeNodeComponent("rectangle769"),
    rectangle771: makeNodeComponent("rectangle771"),
    rectangle772: makeNodeComponent("rectangle772"),
    a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001:
      makeNodeComponent(
        "a13UsaonutLAcCLa2140200051DfVcQYhLpng002140200000002140020001"
      ),
    rectangle768: makeNodeComponent("rectangle768"),
    _10SmallAave: makeNodeComponent("_10SmallAave"),
    _7XSmallTheGraph: makeNodeComponent("_7XSmallTheGraph"),
    _10SmallPolygon: makeNodeComponent("_10SmallPolygon"),
    _10MediumEthereum: makeNodeComponent("_10MediumEthereum"),
    _5XLarge1Inch: makeNodeComponent("_5XLarge1Inch"),
    _5LargeBinance: makeNodeComponent("_5LargeBinance"),
    twitter17: makeNodeComponent("twitter17"),
    telegramLogo2: makeNodeComponent("telegramLogo2"),
    twitter18: makeNodeComponent("twitter18"),
    textInput2: makeNodeComponent("textInput2"),
    img: makeNodeComponent("img"),

    // Metadata about props expected for PlasmicTeeShirt
    internalVariantProps: PlasmicTeeShirt__VariantProps,
    internalArgProps: PlasmicTeeShirt__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: "",
    },
  }
);

export default PlasmicTeeShirt;
/* prettier-ignore-end */
